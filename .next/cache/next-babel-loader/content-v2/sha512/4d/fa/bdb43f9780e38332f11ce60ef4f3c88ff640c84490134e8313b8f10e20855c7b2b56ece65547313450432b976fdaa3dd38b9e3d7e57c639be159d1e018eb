{"ast":null,"code":"import _defineProperty from \"/Users/milan/Development/tutorials/nextjs-blog-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/milan/Development/tutorials/nextjs-blog-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/milan/Development/tutorials/nextjs-blog-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { promises as fsp } from \"fs\";\nimport path from \"path\";\nimport fm from \"front-matter\";\nimport remark from \"remark\";\nimport remarkhtml from \"remark-html\";\nimport * as dateformat from \"./dateformat\";\nvar fileExt = \"md\"; // return absolute path to folder\n\nfunction absPath(dir) {\n  return path.isAbsolute(dir) ? dir : path.resolve(process.cwd(), dir);\n} // return array of files by type in a directory and remove extensions\n\n\nexport function getFileIds() {\n  return _getFileIds.apply(this, arguments);\n}\n\nfunction _getFileIds() {\n  _getFileIds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var dir,\n        loc,\n        files,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dir = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"./\";\n            loc = absPath(dir);\n            _context.next = 4;\n            return fsp.readdir(loc);\n\n          case 4:\n            files = _context.sent;\n            return _context.abrupt(\"return\", files.filter(function (fn) {\n              return path.extname(fn) === \".\".concat(fileExt);\n            }).map(function (fn) {\n              return path.basename(fn, path.extname(fn));\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getFileIds.apply(this, arguments);\n}\n\nexport function getFileData() {\n  return _getFileData.apply(this, arguments);\n}\n\nfunction _getFileData() {\n  _getFileData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var dir,\n        id,\n        file,\n        stat,\n        data,\n        matter,\n        html,\n        date,\n        roundTo,\n        readPerMin,\n        numFormat,\n        count,\n        words,\n        mins,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dir = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : \"./\";\n            id = _args2.length > 1 ? _args2[1] : undefined;\n            file = path.join(absPath(dir), \"\".concat(id, \".\").concat(fileExt));\n            _context2.next = 5;\n            return fsp.stat(file);\n\n          case 5:\n            stat = _context2.sent;\n            _context2.next = 8;\n            return fsp.readFile(file, \"utf8\");\n\n          case 8:\n            data = _context2.sent;\n            matter = fm(data);\n            _context2.next = 12;\n            return remark().use(remarkhtml).process(matter.body);\n\n          case 12:\n            html = _context2.sent.toString();\n            // date formatting\n            date = matter.attributes.date || stat.ctime;\n            matter.attributes.date = date.toUTCString();\n            matter.attributes.dateYMD = dateformat.ymd(date);\n            matter.attributes.dateFriendly = dateformat.friendly(date); // word count\n\n            roundTo = 10, readPerMin = 200, numFormat = new Intl.NumberFormat(\"en\"), count = matter.body.replace(/\\W/g, \" \").replace(/\\s+/g, \" \").split(\" \").length, words = Math.ceil(count / roundTo) * roundTo, mins = Math.ceil(count / readPerMin);\n            matter.attributes.wordcount = \"\".concat(numFormat.format(words), \" words, \").concat(numFormat.format(mins), \"-minute read\");\n            return _context2.abrupt(\"return\", _objectSpread({\n              id: id,\n              html: html\n            }, matter.attributes));\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getFileData.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/milan/Development/tutorials/nextjs-blog-app/lib/posts-md.js"],"names":["promises","fsp","path","fm","remark","remarkhtml","dateformat","fileExt","absPath","dir","isAbsolute","resolve","process","cwd","getFileIds","loc","readdir","files","filter","fn","extname","map","basename","getFileData","id","file","join","stat","readFile","data","matter","use","body","html","toString","date","attributes","ctime","toUTCString","dateYMD","ymd","dateFriendly","friendly","roundTo","readPerMin","numFormat","Intl","NumberFormat","count","replace","split","length","words","Math","ceil","mins","wordcount","format"],"mappings":"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","sourcesContent":["import { promises as fsp } from \"fs\";\nimport path from \"path\";\nimport fm from \"front-matter\";\nimport remark from \"remark\";\nimport remarkhtml from \"remark-html\";\nimport * as dateformat from \"./dateformat\";\nconst fileExt = \"md\";\n\n// return absolute path to folder\nfunction absPath(dir) {\n  return path.isAbsolute(dir) ? dir : path.resolve(process.cwd(), dir);\n}\n// return array of files by type in a directory and remove extensions\nexport async function getFileIds(dir = \"./\") {\n  const loc = absPath(dir);\n  const files = await fsp.readdir(loc);\n  return files\n    .filter(fn => path.extname(fn) === `.${fileExt}`)\n    .map(fn => path.basename(fn, path.extname(fn)));\n}\n\nexport async function getFileData(dir = \"./\", id) {\n  const file = path.join(absPath(dir), `${id}.${fileExt}`),\n    stat = await fsp.stat(file),\n    data = await fsp.readFile(file, \"utf8\"),\n    matter = fm(data),\n    html = (await remark().use(remarkhtml).process(matter.body)).toString();\n  // date formatting\n  const date = matter.attributes.date || stat.ctime;\n  matter.attributes.date = date.toUTCString();\n  matter.attributes.dateYMD = dateformat.ymd(date);\n  matter.attributes.dateFriendly = dateformat.friendly(date);\n  // word count\n  const roundTo = 10,\n    readPerMin = 200,\n    numFormat = new Intl.NumberFormat(\"en\"),\n    count = matter.body.replace(/\\W/g, \" \").replace(/\\s+/g, \" \").split(\" \")\n      .length,\n    words = Math.ceil(count / roundTo) * roundTo,\n    mins = Math.ceil(count / readPerMin);\n  matter.attributes.wordcount = `${numFormat.format(\n    words\n  )} words, ${numFormat.format(mins)}-minute read`;\n  return {\n    id,\n    html,\n    ...matter.attributes,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}