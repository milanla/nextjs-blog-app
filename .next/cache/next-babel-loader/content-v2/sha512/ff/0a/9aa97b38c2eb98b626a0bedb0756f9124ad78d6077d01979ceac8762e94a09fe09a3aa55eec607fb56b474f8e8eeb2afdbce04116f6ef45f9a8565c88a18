{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/milan/Development/tutorials/nextjs-blog-app/components/themetoggle.js\";\nimport React from \"react\";\nimport styles from \"./themetoggle.module.scss\";\nexport default function Themetoggle() {\n  const toggleStore = \"themeToggle\",\n        [theme, setTheme] = React.useState(null);\n  React.useEffect(() => {\n    if (!theme) {\n      setTheme(localStorage.getItem(toggleStore) || (window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\"));\n    }\n\n    if (theme) {\n      const body = document.body;\n      body.classList.remove(\"dark\", \"light\");\n      body.classList.add(theme);\n      localStorage.setItem(toggleStore, theme);\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setTheme(theme === \"dark\" ? \"light\" : \"dark\"),\n    className: styles.themetoggle + \" \" + styles[theme],\n    title: \"switch theme\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/milan/Development/tutorials/nextjs-blog-app/components/themetoggle.js"],"names":["React","styles","Themetoggle","toggleStore","theme","setTheme","useState","useEffect","localStorage","getItem","window","matchMedia","matches","body","document","classList","remove","add","setItem","themetoggle"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,WAAW,GAAG,aAApB;AAAA,QACE,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,IAAf,CADtB;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACH,KAAL,EAAY;AACVC,MAAAA,QAAQ,CACNG,YAAY,CAACC,OAAb,CAAqBN,WAArB,MACGO,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAlD,GACG,MADH,GAEG,OAHN,CADM,CAAR;AAMD;;AACD,QAAIR,KAAJ,EAAW;AACT,YAAMS,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AACAA,MAAAA,IAAI,CAACE,SAAL,CAAeC,MAAf,CAAsB,MAAtB,EAA8B,OAA9B;AACAH,MAAAA,IAAI,CAACE,SAAL,CAAeE,GAAf,CAAmBb,KAAnB;AACAI,MAAAA,YAAY,CAACU,OAAb,CAAqBf,WAArB,EAAkCC,KAAlC;AACD;AACF,GAfD,EAeG,CAACA,KAAD,CAfH;AAgBA,sBACE;AACE,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,MAA9B,CADzB;AAEE,IAAA,SAAS,EAAEH,MAAM,CAACkB,WAAP,GAAqB,GAArB,GAA2BlB,MAAM,CAACG,KAAD,CAF9C;AAGE,IAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import React from \"react\";\nimport styles from \"./themetoggle.module.scss\";\n\nexport default function Themetoggle() {\n  const toggleStore = \"themeToggle\",\n    [theme, setTheme] = React.useState(null);\n  React.useEffect(() => {\n    if (!theme) {\n      setTheme(\n        localStorage.getItem(toggleStore) ||\n          (window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n            ? \"dark\"\n            : \"light\")\n      );\n    }\n    if (theme) {\n      const body = document.body;\n      body.classList.remove(\"dark\", \"light\");\n      body.classList.add(theme);\n      localStorage.setItem(toggleStore, theme);\n    }\n  }, [theme]);\n  return (\n    <button\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n      className={styles.themetoggle + \" \" + styles[theme]}\n      title=\"switch theme\"\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}